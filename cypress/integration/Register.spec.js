import {setup,read_email} from './setup'
// add tests for adding deleting etc
// add tests for clicking on log
describe('Register', function() {
    let tester={name:'test register',email:'epdarnell+freevote@gmail.com',postcode:'HA1 1XR'}
    it("Register", function() {
        console.log('Register')
        setup(cy)
        cy.get('a[name=join]').click()
        cy.get('div[name=register]').within(()=>{
        cy.get('input[name=name]').should(n=>{
            expect(n.get(0).checkValidity()).to.equal(false)
            expect(n.get(0).validationMessage).to.equal('Please fill in this field.')
        })
        cy.get('input[name=name]').type(tester.name).should(n=>{
            expect(n.get(0).checkValidity()).to.equal(true)
            expect(n.get(0).validationMessage).to.equal('')
        })
        cy.get('input[name=email]').should(n=>{
            expect(n.get(0).checkValidity()).to.equal(false)
            expect(n.get(0).validationMessage).to.equal('Please fill in this field.')
        })
        cy.get('input[name=email]').type('invalidemail').should(n=>{
            expect(n.get(0).checkValidity()).to.equal(false)
            expect(n.get(0).validationMessage).to.equal("Please include an '@' in the email address. 'invalidemail' is missing an '@'.")
        })
        cy.get('input[name=email]').clear().type(tester.email).should(n=>{
            expect(n.get(0).checkValidity()).to.equal(true)
            expect(n.get(0).validationMessage).to.equal('')
        })
        cy.get('input[name=postCode]').type('invalidpostcode').should(n=>{
            expect(n.get(0).checkValidity()).to.equal(false)
            expect(n.get(0).validationMessage).to.equal("Please match the format requested.")
        })
        cy.get('input[name=postCode]').clear().should(n=>{
            expect(n.get(0).checkValidity()).to.equal(true)
        })
        cy.get('input[name=postCode]').type('HA1 1XR').should(n=>{
            expect(n.get(0).checkValidity()).to.equal(true)
        })
        cy.get('button[name=register]').click()
      })
      cy.wait(1000)
      //cy.get('div[name=alert]').should('contain','Account registered. Please check your email to confirm.')
      //cy.get('div[name=alert]').should('contain','Account re-registered. Please check your email to confirm.')
      cy.get('div[name=alert]').should('contain','Details updated. Please check your email to confirm changes.')
    })

    it("Confirm Changes", function() {
        read_email('update_'+tester.email,r=>{
            expect(r.greet).to.equal('Dear '+tester.name+',')
            expect(r.to.name).to.equal(tester.name)
            expect(r.to.email).to.equal(tester.email)
            expect(r.from).to.be.null
            expect(r.title).to.equal('Confirm Changes')
            expect(r.message).to.have.string('Please confirm your updated details.')
            expect(r.button.title).to.equal('Confirm Changes')
            expect(r.button.text).to.equal('link will expire in 48 hours')
            let link=r.button.url.match(/http:\/\/.*\?mail=(.*)/)
            cy.visit('/?mail='+link[1],{onBeforeLoad:(win)=>{win.fetch = null}})
            cy.get('div[name=alert]').should('contain','Registration confirmed.')
        })     
    })
    it.only("Welcome", function() {
        read_email('confirmed_'+tester.email,r=>{
            expect(r.greet).to.equal('Dear '+tester.name+',')
            expect(r.to.name).to.equal(tester.name)
            expect(r.to.email).to.equal(tester.email)
            expect(r.from).to.be.null
            expect(r.title).to.equal('Welcome')
            expect(r.message).to.have.string('Welcome to the start of true democracy.')
            expect(r.button.title).to.equal('Contact Us')
            let link=r.button.url.match(/http:\/\/.*\?mail=(.*)/)
            cy.visit('/?mail='+link[1],{onBeforeLoad:(win)=>{win.fetch = null}})
            cy.get('div[name=contact]').within(()=>{
                cy.contains('Contact Us')
                cy.get('textarea[id=formMessage]').should(n=>{
                    expect(n.get(0).checkValidity()).to.equal(false)
                    expect(n.get(0).validationMessage).to.equal('Please fill in this field.')
                }).type("A test message").should(n=>{
                    expect(n.get(0).checkValidity()).to.equal(true)
                    expect(n.get(0).validationMessage).to.equal('')
                })
                cy.get('button[name=send]').click()
            })
            cy.get('div[name=alert]').should('contain','Message sent. We aim to respond within 24 hours.')
        })     
    })
    it("Change Email", function() {
        setup(cy,tester)
        cy.get('#user').click()
        cy.get('#update').click()
        cy.get('input[name=password]').type(tester.password)
        cy.get('button[name=confirm]').click()
        cy.get('input[name=email]').clear().type('epdarnell@gmail.com')
        cy.get('button[name=register]').contains('Update').click()
        cy.get('span[name=error_email]').should('contain','already in use')
        cy.get('input[name=name]').type(2)
        cy.get('input[name=email]').clear().type('epdarnell+login1@gmail.com')
        cy.get('button[name=register]').contains('Update').click()
        cy.wait(1000)
        cy.get('div[name=alert]').should('contain','Please check your email to confirm changes')
        cy.get('#user').should('contain',tester.name+'2')
    })
    it("Confirm Email", function() {
        read_email('newEmail_epdarnell+login1@gmail.com',r=>{
            expect(r.greet).to.equal('Dear '+tester.name+'2,')
            expect(r.to.name).to.equal(tester.name+'2')
            expect(r.to.email).to.equal('epdarnell+login1@gmail.com')
            expect(r.from).to.be.null
            expect(r.title).to.equal('Confirm Email')
            expect(r.message).to.equal('Please confirm your new email address.')
            expect(r.button.title).to.equal('Confirm Email')
            expect(r.button.text).to.equal('confirm your new email')
            let link=r.button.url.match(/http:\/\/freemaths\?mail=(.*)/)
            cy.visit('/?mail='+link[1],{onBeforeLoad:(win)=>{win.fetch = null}})
            cy.get('div[name=password]').contains('h4','Confirm Email Change')
            cy.get('button[name=confirm]').click()
            cy.get('span[name=error_password]').should('contain','required')
            cy.get('div[name=password]').within(()=>{
                cy.get('input[name=password]').type('12345')
                cy.get('button[name=confirm]').click()
                cy.get('span[name=error_password]').should('contain','incorrect')
                cy.get('input[name=password]').clear().type(tester.password)
                cy.get('button[name=confirm]').click()
            })
            cy.get('div[name=alert]').should('contain','Email updated')
        })
    })
    it("Update", function() {
        setup(cy,{email:'epdarnell+login1@gmail.com',password:tester.password})
        cy.get('#user').click()
        cy.get('#update').click()
        cy.get('button[name=confirm]').click()
        cy.get('span[name=error_password]').should('contain','required')
        cy.get('input[name=password]').type('wrong')
        cy.get('button[name=confirm]').click()
        cy.get('span[name=error_password]').should('contain','incorrect')
        cy.get('input[name=password]').clear().type(tester.password)
        cy.get('button[name=confirm]').click()
        cy.get('div[name=register] input').should(i=>{
            expect(i).to.have.length(2)
            expect(i.eq(0)).to.have.attr('name','name')
            expect(i.eq(1)).to.have.attr('name','email')
        })
        cy.get('div[name=register]').within(()=>{
            cy.get('input[name=name]').should('have.value',tester.name+'2').clear()
            cy.get('input[name=email]').should('have.value','epdarnell+login1@gmail.com').clear()
            cy.get('button[name=register]').click()
            cy.get('span[name=error_name]').should('contain','required')
            cy.get('span[name=error_email]').should('contain','required')
            cy.get('input[name=name]').type(tester.name)
            cy.get('span[name=error_name]').should('not.exist')
            cy.get('input[name=email]').type(tester.email)
            cy.get('span[name=error_email]').should('not.exist')
            cy.get('button[name=password]').click()
            cy.get('input').should(i=>{
                expect(i).to.have.length(4)
                expect(i.eq(0)).to.have.attr('name','name')
                expect(i.eq(1)).to.have.attr('name','email')
                expect(i.eq(2)).to.have.attr('name','password')
                expect(i.eq(3)).to.have.attr('name','password_confirmation')
            })
            cy.get('button[name=register]').click()
            cy.get('span[name=error_password]').should('contain','minimum length 6')
            cy.get('input[name=password]').type('12345')
            cy.get('span[name=error_password]').should('not.exist')
            cy.get('button[name=register]').click()
            cy.get('span[name=error_password]').should('contain','minimum length 6')
            cy.get('input[name=password]').clear().type('login2')
            cy.get('button[name=register]').click()
            cy.get('span[name=error_password_confirmation]').should('contain','must match')
            cy.get('input[name=password_confirmation]').type('login2')
            cy.get('button[name=register]').click()
        })
        cy.wait(1000)
        cy.get('div[name=alert]').should('contain','Please check your email to confirm changes')
        cy.get('#user').should('contain',tester.name)
    })
    it("Confirm Email 2", function() {
        read_email('newEmail_'+tester.email,r=>{
            expect(r.greet).to.equal('Dear '+tester.name+',')
            expect(r.to.name).to.equal(tester.name)
            expect(r.to.email).to.equal(tester.email)
            expect(r.from).to.be.null
            expect(r.title).to.equal('Confirm Email')
            expect(r.message).to.equal('Please confirm your new email address.')
            expect(r.button.title).to.equal('Confirm Email')
            expect(r.button.text).to.equal('confirm your new email')
            let link=r.button.url.match(/http:\/\/freemaths\?mail=(.*)/)
            cy.visit('/?mail='+link[1],{onBeforeLoad:(win)=>{win.fetch = null}})
            cy.get('div[name=password]').contains('h4','Confirm Email Change')
            cy.get('button[name=confirm]').click()
            cy.get('span[name=error_password]').should('contain','required')
            cy.get('div[name=password]').within(()=>{
                cy.get('input[name=password]').type('login2')
                cy.get('button[name=confirm]').click()
            })
            cy.get('div[name=alert]').should('contain','Email updated')
        })
    })
    it("Forgotten password", function() {
        setup(cy)
        cy.get('input[name=email]').type(tester.email)
        cy.get('button[name=forgot]').contains('Forgot your password?').click()
        cy.get('div[name=forgot]').within(()=>{
            cy.get('input[name=email]').should('have.value',tester.email).clear()
            cy.get('button[name=reset]').click()
            cy.get('span[name=error_email]').should('contain','required')
            cy.get('input[name=email]').type('epdarnell+wrong@gmail.com')
            cy.get('button[name=reset]').click()
            cy.get('span[name=error_email]').should('contain','not registered')
            cy.get('input[name=email]').clear().type(tester.email)
            cy.get('button[name=reset]').click()
            cy.get('div[name=message]').should('contain','Sending...')
        })
        cy.wait(1000)
        cy.get('div[name=alert]').should('contain','We have e-mailed your password reset link.')
    })
    it("Change Password", function() {
        read_email('reset_'+tester.email,r=>{
            expect(r.greet).to.equal('Dear '+tester.name+',')
            expect(r.to.name).to.equal(tester.name)
            expect(r.to.email).to.equal(tester.email)
            expect(r.from).to.be.null
            expect(r.title).to.equal('Reset Password')
            expect(r.message).to.equal('You are receiving this email because a forgotten password request was made for your account.')
            expect(r.button.title).to.equal('Reset Password')
            expect(r.button.text).to.equal('link will expire in 48 hours')
            let link=r.button.url.match(/http:\/\/freemaths\?mail=(.*)/)
            cy.visit('/?mail='+link[1],{onBeforeLoad:(win)=>{win.fetch = null}})
            cy.get('div[name=reset]').contains('h4','Reset Password')
            cy.get('div[name=reset]').within(()=>{
                cy.get('button[name=reset]').click()
                cy.get('span[name=error_email]').should('contain','required')
                cy.get('span[name=error_password]').should('contain','minimum length 6')
                cy.get('input[name=email]').type('faulty@email')
                cy.get('span[name=error_email]').should('not.exist')
                cy.get('input[name=password]').type(tester.password)
                cy.get('span[name=error_password]').should('not.exist')
                cy.get('button[name=reset]').click()
                cy.get('span[name=error_password_confirmation]').should('contain','must match')
                cy.get('input[name=password_confirmation]').type(tester.password)
                cy.get('span[name=error_password_confirmation]').should('not.exist')
                cy.get('button[name=reset]').click()
                cy.get('span[name=error_email]').should('contain','incorrect')
                cy.get('input[name=email]').clear().type('epdarnell@gmail.com')
                cy.get('button[name=reset]').click()
                cy.get('span[name=error_email]').should('contain','incorrect')
                cy.get('input[name=email]').clear().type(tester.email)
                cy.get('button[name=reset]').click()
            })
            cy.get('div[name=alert]').should('contain','Your password has been reset')
        })
    })
    it("Change Password 2", function() {
        read_email('reset_'+tester.email,r=>{
            let link=r.button.url.match(/http:\/\/freemaths\?mail=(.*)/)
            cy.visit('/?mail='+link[1],{onBeforeLoad:(win)=>{win.fetch = null}})
            cy.get('div[name=reset]').contains('h4','Reset Password')
            cy.get('div[name=reset]').within(()=>{
                cy.get('input[name=password]').type(tester.password)
                cy.get('input[name=password_confirmation]').type(tester.password)
                cy.get('input[name=email]').clear().type(tester.email)
                cy.get('button[name=reset]').click()
                cy.get('div[name=error]').should('contain','invalid token')
            })
        })
    })
    it("Unsubscribe", function() {
        setup(cy,tester)
        cy.get('#user').click()
        cy.get('#unsubscribe').click()
        cy.get('div[name=password]').within(()=>{
            cy.get('input[name=password]').type('wrongpassword')
            cy.get('button[name=confirm]').click()
            cy.get('span[name=error_password]').should('contain','incorrect')
            cy.get('input[name=password]').clear().type(tester.password)
            cy.get('span[name=error_password]').should('not.exist')
            cy.get('button[name=confirm]').click()
        })
        cy.wait(1000)
        cy.get('div[name=alert]').should('contain','Account deleted')
    })
    it("Unsubscribe Confirm", function() {
        read_email('unsubscribe_'+tester.email,r=>{
            expect(r.greet).to.equal('Dear '+tester.name+',')
            expect(r.to.name).to.equal(tester.name)
            expect(r.to.email).to.equal(tester.email)
            expect(r.from).to.be.null
            expect(r.title).to.equal('Account Deleted')
            expect(r.message).to.equal("Your account has now been unsubscribed and your details removed from our database.\nIf you did not request this, or made the request in error please contact us or reply to this email.")
            expect(r.button.title).to.equal('Contact Us')
            expect(r.button.text).to.equal('contact FreeMaths.uk')
            let link=r.button.url.match(/http:\/\/freemaths\?mail=(.*)/)
            cy.visit('/?mail='+link[1],{onBeforeLoad:(win)=>{win.fetch = null}})
            cy.get('div[name=contact]').should('contain','Contact FreeMaths.uk')
            //TODO - pre-fill and pass unsubscribe details
        })
    })
    it("Login Fail", function() {
        setup(cy)
        login(cy,tester)
        cy.get('span[name=error_password]').should('contain','These credentials do not match our records.')
    })
    
})
